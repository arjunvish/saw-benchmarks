(set-option :produce-models true)
; :1:0
(declare-fun x0 () (_ BitVec 32))
(define-fun x!0 () (_ BitVec 32) (bvand (_ bv65535 32) x0))
(define-fun x!1 () Bool (= (_ bv0 32) x!0))
(define-fun x!2 () (_ BitVec 32) (bvlshr x0 (_ bv16 32)))
(define-fun x!3 () (_ BitVec 32) (ite x!1 x!2 x0))
(define-fun x!4 () (_ BitVec 32) (bvand (_ bv255 32) x!3))
(define-fun x!5 () Bool (= (_ bv0 32) x!4))
(define-fun x!6 () (_ BitVec 32) (bvlshr x!3 (_ bv8 32)))
(define-fun x!7 () (_ BitVec 32) (ite x!5 x!6 x!3))
(define-fun x!8 () (_ BitVec 32) (bvand (_ bv15 32) x!7))
(define-fun x!9 () Bool (= (_ bv0 32) x!8))
(define-fun x!10 () (_ BitVec 32) (bvlshr x!7 (_ bv4 32)))
(define-fun x!11 () (_ BitVec 32) (ite x!9 x!10 x!7))
(define-fun x!12 () (_ BitVec 32) (bvand (_ bv3 32) x!11))
(define-fun x!13 () Bool (= (_ bv0 32) x!12))
(define-fun x!14 () (_ BitVec 32) (bvlshr x!11 (_ bv2 32)))
(define-fun x!15 () (_ BitVec 32) (ite x!13 x!14 x!11))
(define-fun x!16 () Bool (= (_ bv0 32) x!15))
(assert (not x!16))
(define-fun x!17 () (_ BitVec 8) (ite x!1 (_ bv17 8) (_ bv1 8)))
(define-fun x!18 () (_ BitVec 32) (concat (_ bv0 24) x!17))
(define-fun x!19 () (_ BitVec 32) (bvadd x!18 (_ bv8 32)))
(define-fun x!20 () (_ BitVec 8) ((_ extract 7 0) x!19))
(define-fun x!21 () (_ BitVec 8) (ite x!5 x!20 x!17))
(define-fun x!22 () (_ BitVec 32) (concat (_ bv0 24) x!21))
(define-fun x!23 () (_ BitVec 32) (bvadd x!22 (_ bv4 32)))
(define-fun x!24 () (_ BitVec 8) ((_ extract 7 0) x!23))
(define-fun x!25 () (_ BitVec 8) (ite x!9 x!24 x!21))
(define-fun x!26 () (_ BitVec 32) (concat (_ bv0 24) x!25))
(define-fun x!27 () (_ BitVec 32) (bvadd x!26 (_ bv2 32)))
(define-fun x!28 () (_ BitVec 8) ((_ extract 7 0) x!27))
(define-fun x!29 () (_ BitVec 8) (ite x!13 x!28 x!25))
(define-fun x!30 () (_ BitVec 32) (concat (_ bv0 24) x!29))
(define-fun x!31 () (_ BitVec 32) (bvadd x!15 (_ bv1 32)))
(define-fun x!32 () (_ BitVec 32) (bvand (_ bv1 32) x!31))
(define-fun x!33 () (_ BitVec 32) (bvadd x!32 x!30))
(define-fun x!34 () Bool (= (_ bv4 32) x!33))
(assert x!34)
(check-sat)
(exit)
