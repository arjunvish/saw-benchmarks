(set-option :produce-models true)
; :1:0
(declare-fun x0 () (_ BitVec 7))
(define-fun x!0 () Bool (= ((_ extract 6 6) x0) (_ bv1 1)))
(define-fun x!1 () (_ BitVec 1) (ite x!0 (_ bv1 1) (_ bv0 1)))
(define-fun x!2 () Bool (= ((_ extract 5 5) x0) (_ bv1 1)))
(define-fun x!3 () (_ BitVec 1) (ite x!2 (_ bv1 1) (_ bv0 1)))
(define-fun x!4 () (_ BitVec 2) (concat x!1 x!3))
(define-fun x!5 () Bool (= ((_ extract 4 4) x0) (_ bv1 1)))
(define-fun x!6 () (_ BitVec 1) (ite x!5 (_ bv1 1) (_ bv0 1)))
(define-fun x!7 () (_ BitVec 3) (concat x!4 x!6))
(define-fun x!8 () Bool (= ((_ extract 3 3) x0) (_ bv1 1)))
(define-fun x!9 () (_ BitVec 1) (ite x!8 (_ bv1 1) (_ bv0 1)))
(define-fun x!10 () (_ BitVec 4) (concat x!7 x!9))
(define-fun x!11 () Bool (= ((_ extract 2 2) x0) (_ bv1 1)))
(define-fun x!12 () (_ BitVec 1) (ite x!11 (_ bv1 1) (_ bv0 1)))
(define-fun x!13 () (_ BitVec 5) (concat x!10 x!12))
(define-fun x!14 () Bool (= ((_ extract 1 1) x0) (_ bv1 1)))
(define-fun x!15 () (_ BitVec 1) (ite x!14 (_ bv1 1) (_ bv0 1)))
(define-fun x!16 () (_ BitVec 6) (concat x!13 x!15))
(define-fun x!17 () Bool (= ((_ extract 0 0) x0) (_ bv1 1)))
(define-fun x!18 () (_ BitVec 1) (ite x!17 (_ bv1 1) (_ bv0 1)))
(define-fun x!19 () (_ BitVec 7) (concat x!16 x!18))
(define-fun x!20 () Bool (= x!19 x0))
(define-fun x!21 () Bool (not x!20))
(assert x!21)
(check-sat)
(exit)
;./test_w4/test_w4-23.prove0.smt2
