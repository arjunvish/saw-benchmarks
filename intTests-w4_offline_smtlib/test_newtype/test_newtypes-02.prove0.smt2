(set-option :produce-models true)
; :1:0
(declare-fun x1 () Int)
(declare-fun x3 () Int)
(define-fun x!0 () Int (* x1 x3))
(declare-fun x0 () Int)
(declare-fun x2 () Int)
(define-fun x!1 () Int (* x0 x2))
(define-fun x!2 () Int (+ (- x!1) x!0))
(declare-fun x5 () Int)
(define-fun x!3 () Int (* x!2 x5))
(define-fun x!4 () Int (* x1 x2))
(define-fun x!5 () Int (* x0 x3))
(define-fun x!6 () Int (+ x!5 x!4))
(declare-fun x4 () Int)
(define-fun x!7 () Int (* x!6 x4))
(define-fun x!8 () Int (+ (- x!7) x!3))
(define-fun x!9 () Int (* x3 x5))
(define-fun x!10 () Int (* x2 x4))
(define-fun x!11 () Int (+ (- x!10) x!9))
(define-fun x!12 () Int (* x!11 x1))
(define-fun x!13 () Int (* x3 x4))
(define-fun x!14 () Int (* x2 x5))
(define-fun x!15 () Int (+ x!14 x!13))
(define-fun x!16 () Int (* x!15 x0))
(define-fun x!17 () Int (+ (- x!16) x!12))
(define-fun x!18 () Bool (= x!8 x!17))
(define-fun x!19 () Int (* x!2 x4))
(define-fun x!20 () Int (* x!6 x5))
(define-fun x!21 () Int (+ x!20 x!19))
(define-fun x!22 () Int (* x!15 x1))
(define-fun x!23 () Int (* x!11 x0))
(define-fun x!24 () Int (+ x!23 x!22))
(define-fun x!25 () Bool (= x!21 x!24))
(define-fun x!26 () Bool (and x!18 x!25))
(define-fun x!27 () Bool (not x!26))
(assert x!27)
(check-sat)
(exit)
