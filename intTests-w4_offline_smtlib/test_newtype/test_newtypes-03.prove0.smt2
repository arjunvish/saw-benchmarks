(set-option :produce-models true)
; :1:0
(declare-fun x3 () Int)
(declare-fun x5 () Int)
(define-fun x!0 () Int (+ x5 x3))
(declare-fun x1 () Int)
(define-fun x!1 () Int (* x!0 x1))
(declare-fun x2 () Int)
(declare-fun x4 () Int)
(define-fun x!2 () Int (+ x4 x2))
(declare-fun x0 () Int)
(define-fun x!3 () Int (* x!2 x0))
(define-fun x!4 () Int (+ (- x!3) x!1))
(define-fun x!5 () Int (* x1 x3))
(define-fun x!6 () Int (* x0 x2))
(define-fun x!7 () Int (* x1 x5))
(define-fun x!8 () Int (* x0 x4))
(define-fun x!9 () Int (+ (- x!8) x!7 (- x!6) x!5))
(define-fun x!10 () Bool (= x!4 x!9))
(define-fun x!11 () Int (* x!2 x1))
(define-fun x!12 () Int (* x!0 x0))
(define-fun x!13 () Int (+ x!12 x!11))
(define-fun x!14 () Int (* x1 x2))
(define-fun x!15 () Int (* x0 x3))
(define-fun x!16 () Int (* x1 x4))
(define-fun x!17 () Int (* x0 x5))
(define-fun x!18 () Int (+ x!17 x!16 x!15 x!14))
(define-fun x!19 () Bool (= x!13 x!18))
(define-fun x!20 () Bool (and x!10 x!19))
(define-fun x!21 () Bool (not x!20))
(assert x!21)
(check-sat)
(exit)
