(set-option :produce-models true)
; :1:0
(declare-fun x2 () (_ BitVec 64))
(define-fun x!0 () (_ BitVec 32) ((_ extract 63 32) x2))
(define-fun x!1 () (_ BitVec 64) (concat (_ bv0 32) x!0))
(declare-fun x0 () (_ BitVec 64))
(define-fun x!2 () (_ BitVec 32) ((_ extract 63 32) x0))
(define-fun x!3 () (_ BitVec 64) (concat (_ bv0 32) x!2))
(define-fun x!4 () (_ BitVec 32) ((_ extract 31 0) x2))
(define-fun x!5 () (_ BitVec 64) (concat (_ bv0 32) x!4))
(define-fun x!6 () (_ BitVec 32) ((_ extract 31 0) x0))
(define-fun x!7 () (_ BitVec 64) (concat (_ bv0 32) x!6))
(define-fun x!8 () (_ BitVec 64) (bvadd x!7 x!5))
(define-fun x!9 () (_ BitVec 32) ((_ extract 63 32) x!8))
(define-fun x!10 () (_ BitVec 64) (concat (_ bv0 32) x!9))
(define-fun x!11 () (_ BitVec 64) (bvadd (bvadd x!10 x!3) x!1))
(define-fun x!12 () (_ BitVec 32) ((_ extract 31 0) x!11))
(define-fun x!13 () (_ BitVec 64) (bvadd x!7 x!5))
(define-fun x!14 () (_ BitVec 32) ((_ extract 31 0) x!13))
(define-fun x!15 () (_ BitVec 64) (concat x!12 x!14))
(declare-fun x1 () (_ BitVec 64))
(define-fun x!16 () (_ BitVec 128) (concat x1 x0))
(declare-fun x3 () (_ BitVec 64))
(define-fun x!17 () (_ BitVec 128) (concat x3 x2))
(define-fun x!18 () (_ BitVec 128) (bvadd x!17 x!16))
(define-fun x!19 () (_ BitVec 64) ((_ extract 63 0) x!18))
(define-fun x!20 () Bool (= x!15 x!19))
(define-fun x!21 () (_ BitVec 128) (bvadd x!17 x!16))
(define-fun x!22 () (_ BitVec 64) ((_ extract 127 64) x!21))
(define-fun x!23 () (_ BitVec 32) ((_ extract 63 32) x3))
(define-fun x!24 () (_ BitVec 64) (concat (_ bv0 32) x!23))
(define-fun x!25 () (_ BitVec 32) ((_ extract 63 32) x1))
(define-fun x!26 () (_ BitVec 64) (concat (_ bv0 32) x!25))
(define-fun x!27 () (_ BitVec 32) ((_ extract 31 0) x3))
(define-fun x!28 () (_ BitVec 64) (concat (_ bv0 32) x!27))
(define-fun x!29 () (_ BitVec 32) ((_ extract 31 0) x1))
(define-fun x!30 () (_ BitVec 64) (concat (_ bv0 32) x!29))
(define-fun x!31 () (_ BitVec 64) (bvadd (bvadd x!10 x!3) x!1))
(define-fun x!32 () (_ BitVec 32) ((_ extract 63 32) x!31))
(define-fun x!33 () (_ BitVec 64) (concat (_ bv0 32) x!32))
(define-fun x!34 () (_ BitVec 64) (bvadd (bvadd x!33 x!30) x!28))
(define-fun x!35 () (_ BitVec 32) ((_ extract 63 32) x!34))
(define-fun x!36 () (_ BitVec 64) (concat (_ bv0 32) x!35))
(define-fun x!37 () (_ BitVec 64) (bvadd (bvadd x!36 x!26) x!24))
(define-fun x!38 () (_ BitVec 32) ((_ extract 31 0) x!37))
(define-fun x!39 () (_ BitVec 64) (bvadd (bvadd x!33 x!30) x!28))
(define-fun x!40 () (_ BitVec 32) ((_ extract 31 0) x!39))
(define-fun x!41 () (_ BitVec 64) (concat x!38 x!40))
(define-fun x!42 () Bool (= x!22 x!41))
(define-fun x!43 () Bool (and x!20 x!42))
(define-fun x!44 () Bool (not x!43))
(assert x!44)
(check-sat)
(exit)
;./test0051_compositional_extract_2/test0051-yices-01.prove0.smt2
